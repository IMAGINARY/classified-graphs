{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-bd68a17b57f1b095.js","src/ts/main.ts","src/ts/modesList.ts","src/ts/modes/ModeLoad.ts","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-3d8f90b5e52e37fb.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"3o83C\\\":\\\"index.89395c55.js\\\",\\\"7xBTE\\\":\\\"sgiso_worker.b7491b5b.js\\\",\\\"7nvGH\\\":\\\"index.0f82989d.js\\\"}\"));","// import assert from 'assert';\nimport cytoscape from 'cytoscape';\nimport ready from 'document-ready';\nimport * as d3 from 'd3-selection';\nimport i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport locI18next from 'loc-i18next';\n\nimport './side-effects';\n\nimport { i18nextOptions, langList } from './constants';\n\nimport { cy, parameters, toolbarModes, infoboxModes } from './modesList';\nimport ModeNull from './modes/ModeNull';\nimport { Mode } from './modes/modes';\n\nimport * as assets from './assets';\n\n// eslint-disable-next-line no-void\nvoid i18next.use(LanguageDetector).init(i18nextOptions);\nconst localize = locI18next.init(i18next);\n\n/**\n * Specify types of global variables that are not yet defined on 'window'.\n * Technically, this declaration is not correct, because the variables are\n * only defined in main, but not before it is executed. The correct way would be\n * ```\n * declare global {\n *   interface Window {\n *     cy: cytoscape.Core | undefined;\n *     d3: typeof d3 | undefined;\n *   }\n * }\n * ```\n * But then you would need to check for 'undefined' everywhere in your code\n * where the global variables are used, which is quite cumbersome for debugging.\n *\n * A cleaner way would to do it would be to define a method on window that returns\n * a promise that resolves with cy after main is executed.\n * Similar to navigator.requestMIDIAccess().\n */\ndeclare global {\n  interface Window {\n    cy: cytoscape.Core;\n    d3: typeof d3;\n    findIso: (a: void) => void;\n  }\n}\nwindow.d3 = d3;\n// window.parameters = parameters;\n\nfunction main() {\n  // After this, window.cy is shadowing the function-local cy.\n  // This is because the globalThis pointer refers to 'window' in the browser environment.\n  // Both have no type assigned on the window object.\n  // Same for the global vs. local d3 object.\n  window.cy = cy;\n\n  const findIsomorphisms = () => {\n    if (window.Worker) {\n      const worker = new Worker(\n        new URL('./modes/sgiso_worker.ts', import.meta.url),\n        {\n          type: 'module',\n        },\n      );\n      const A = cy.elements().utils().adjacencyMatrix();\n\n      worker.postMessage([A, A]);\n\n      worker.onmessage = () => {\n        // console.log(e.data);\n      };\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(\"Your browser doesn't support web workers.\");\n    }\n  };\n\n  window.findIso = findIsomorphisms;\n\n  // d3.select('#output').html(i18next.t('Connected_components')); // test\n\n  const modeNull = new ModeNull(cy, parameters);\n  let primaryMode: Mode = modeNull;\n  let secondaryMode: Mode = infoboxModes[0].modeObj;\n\n  primaryMode.activate();\n  secondaryMode.activate();\n\n  function switchPrimaryMode(newMode: Mode) {\n    primaryMode.deactivate();\n    primaryMode = newMode;\n    primaryMode.activate();\n  }\n\n  function switchSecondaryMode(newMode: Mode) {\n    secondaryMode.deactivate();\n    secondaryMode = newMode;\n    secondaryMode.activate();\n  }\n\n  // Make Language Selector\n  d3.select('#langSelector')\n    .select('.dropdown-menu')\n    .selectAll('li')\n    .data(langList)\n    .enter()\n    .append('li')\n    .append('a')\n    .classed('dropdown-item', true)\n    .attr('href', '#')\n    .on('click', (ev, d) => {\n      i18next\n        .changeLanguage(d.isoCode)\n        .then(() => localize('.translate'))\n        .catch((reason) => {\n          // TODO: Handle the error properly instead of ignoring it.\n          // eslint-disable-next-line no-console\n          console.error(`Changing to language ${d.isoCode} failed.`, reason);\n        });\n    })\n    .text((d) => d.endonym);\n\n  // Make toolbar buttons\n  const buttons = d3\n    .select('#toolbar')\n    .selectAll('button')\n    .data(toolbarModes)\n    .enter()\n    .append('button')\n    .classed('toolbar-button', true)\n    .attr('id', (d) => `btn-${d.modeName}`);\n\n  buttons.append('img').attr('src', (d) => d.icon);\n\n  // d3.select('#btn-modeLayout')\n  //   .append('select')\n  //   .attr('id', 'selectLayout')\n  //   .selectAll('option')\n  //   .data([\n  //     { value: 'circle', textKey: 'Circle' },\n  //     { value: 'random', textKey: 'Random' },\n  //   ])\n  //   .enter()\n  //   .append('option')\n  //   .attr('value', (d) => d.value)\n  //   // .classed('translate', true)\n  //   // .attr('data-i18n', (d) => d.textKey);\n  //   .html((d) => d.textKey);\n\n  buttons\n    .append('div')\n    .classed('translate', true)\n    .attr('data-i18n', (d) => d.textKey);\n  // .html((d) => i18next.t(d.textKey));\n\n  buttons.on('click', (ev, d) => {\n    switchPrimaryMode(d.modeObj);\n  });\n\n  // Make Load modal\n  d3.select('#btn-modeLoad')\n    .attr('data-bs-toggle', 'modal')\n    .attr('data-bs-target', '#exampleModal');\n\n  // Make infobox items\n  function updateInfo() {\n    const infoboxItems = d3\n      .select('#infobox')\n      .selectAll<HTMLDivElement, unknown>('div.infoItem')\n      .data(infoboxModes);\n\n    const newItems = infoboxItems\n      .enter()\n      .append('div')\n      .attr('id', (d) => `infoItem-${d.modeName}`)\n      .classed('infoItem', true);\n\n    newItems // Info icon\n      .append('img')\n      .attr('src', assets.iconInfo)\n      .attr('data-bs-toggle', 'collapse')\n      .attr('data-bs-target', (d) => `#infoItem-text-${d.modeName}`)\n      .on('click', (ev: Event) => {\n        ev.stopPropagation();\n      });\n\n    newItems.append('div').classed('outputText', true); // container for text\n\n    newItems // Tip text\n      .append('div')\n      .attr('id', (d) => `infoItem-text-${d.modeName}`)\n      .attr('data-bs-parent', '#infobox')\n      .attr('data-bs-toggle', 'collapse')\n      .classed('tipText', true)\n      .classed('collapse', true)\n      .classed('translate', true)\n      .attr('data-i18n', (d) => `[html]${d.textKey}_Tip`);\n    // .html((d) => i18next.t(`${d.textKey}_Tip`));\n\n    newItems.on('click', (ev: MouseEvent, d) => {\n      const target = ev.currentTarget;\n      if (target instanceof Element) {\n        if (d.modeObj === secondaryMode) {\n          switchSecondaryMode(modeNull);\n          d3.select(target).classed('infoItemActive', false);\n        } else {\n          switchSecondaryMode(d.modeObj);\n          d3.select('.infoItemActive').classed('infoItemActive', false);\n          d3.select(target).classed('infoItemActive', true);\n        }\n      }\n    });\n\n    // update selection\n    infoboxItems\n      .merge(newItems)\n      .select('.outputText')\n      .html(\n        (d) =>\n          `<span class=\"translate\" data-i18n=\"[html]${d.textKey}\">\n          ${i18next.t(d.textKey)}\n          </span>: \n          ${d.modeObj.infobox()}`,\n      );\n\n    // if (!d3.select('.infoItemActive').empty()) {\n    //   d3.select('.infoItemActive').datum().modeObj.render();\n    if (secondaryMode !== modeNull) {\n      secondaryMode.render();\n    }\n  }\n\n  // window.infoboxModes = infoboxModes;\n\n  cy.on('cm-graph-updated', updateInfo);\n\n  updateInfo();\n  d3.select('.infoItem').classed('infoItemActive', true);\n\n  // //Other test functions\n  // function showGraphExport() {\n  //   const json = cy.json();\n  //   const jsonString = JSON.stringify(json, null, 4);\n  //   d3.select('#outputText').text(jsonString);\n  // }\n  // d3.select('#showJSON').on('click', showGraphExport);\n\n  localize('.translate');\n}\n\nready(main);\n","/* this file creates the cy instance, the parameters instance, and the arrays of modes to be used */\nimport cytoscape from 'cytoscape';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { Mode, Parameters } from './modes/modes';\nimport { cyOptions } from './constants';\n\nimport * as assets from './assets';\n\nimport ModeNull from './modes/ModeNull';\nimport ModeNode from './modes/ModeNode';\nimport ModeEdge from './modes/ModeEdge';\n// import ModeDijkstra from './modes/ModeDijkstra';\nimport ModeGirth from './modes/ModeGirth';\nimport ModeNumNodes from './modes/ModeNumNodes';\nimport ModeNumEdges from './modes/ModeNumEdges'; // ModeNumEdges -> ES Module\nimport ModeDegSequence from './modes/ModeDegSequence';\nimport ModeComponents from './modes/ModeComponents';\nimport ModeCircuitRank from './modes/ModeCircuitRank';\nimport ModeDiameter from './modes/ModeDiameter';\nimport ModeExport from './modes/ModeExport';\nimport ModeImport from './modes/ModeImport';\nimport ModeLoad from './modes/ModeLoad';\n// import ModeLayout from './modes/ModeLayout';\nimport ModeClear from './modes/ModeClear';\nimport ModeDetAdjacency from './modes/ModeDetAdjacency';\n// import ModeAdjacencyMatrix from './modes/ModeAdjacencyMatrix';\n\nconst parameters: Parameters = {\n  idNodeCount: 1,\n  idEdgeCount: 1,\n  outputContainer: document.getElementById('output') as HTMLElement,\n  nodeIndex: [],\n};\n\nconst cy = cytoscape({\n  ...cloneDeep(cyOptions),\n  ...{ container: document.getElementById('cy') },\n});\n\ntype ModeConfig = {\n  modeName: string;\n  textKey: string;\n  icon: string;\n  modeObj: Mode;\n};\n\nconst toolbarModes: ModeConfig[] = [\n  {\n    modeName: 'modeClear',\n    textKey: 'Clear',\n    icon: assets.iconClear,\n    modeObj: new ModeClear(cy, parameters),\n  },\n  {\n    modeName: 'modeExport',\n    textKey: 'Export',\n    icon: assets.iconExport,\n    modeObj: new ModeExport(cy, parameters),\n  },\n  {\n    modeName: 'modeImport',\n    textKey: 'Import',\n    icon: assets.iconImport,\n    modeObj: new ModeImport(cy, parameters),\n  },\n  {\n    modeName: 'modeLoad',\n    textKey: 'Load',\n    icon: assets.iconLoad,\n    modeObj: new ModeLoad(cy, parameters),\n  },\n  {\n    modeName: 'modeNull',\n    textKey: 'Pointer',\n    icon: assets.iconPointer,\n    modeObj: new ModeNull(cy, parameters),\n  },\n  {\n    modeName: 'modeNode',\n    textKey: 'Nodes',\n    icon: assets.iconNode,\n    modeObj: new ModeNode(cy, parameters),\n  },\n  {\n    modeName: 'modeEdge',\n    textKey: 'Edges',\n    icon: assets.iconEdge,\n    modeObj: new ModeEdge(cy, parameters),\n  },\n  // {\n  //   modeName: 'modeLayout',\n  //   textKey: 'Layout',\n  //   icon: assets.iconEdge,\n  //   modeObj: new ModeLayout(cy, parameters),\n  // },\n  // {\n  //   modeName: 'modeDijkstra',\n  //   textKey: 'Shortest_path',\n  //   icon: assets.iconDijkstra,\n  //   modeObj: new ModeDijkstra(cy, parameters),\n  // },\n];\n\nconst infoboxModes: ModeConfig[] = [\n  {\n    modeName: 'modeNumNodes',\n    textKey: 'Order',\n    icon: assets.iconGirth,\n    modeObj: new ModeNumNodes(cy, parameters),\n  },\n  {\n    modeName: 'modeNumEdges',\n    textKey: 'Size',\n    icon: assets.iconGirth,\n    modeObj: new ModeNumEdges(cy, parameters),\n  },\n  {\n    modeName: 'modeGirth',\n    textKey: 'Girth',\n    icon: assets.iconGirth,\n    modeObj: new ModeGirth(cy, parameters),\n  },\n  {\n    modeName: 'modeDegSequence',\n    textKey: 'Degree_sequence',\n    icon: assets.iconGirth,\n    modeObj: new ModeDegSequence(cy, parameters),\n  },\n  {\n    modeName: 'modeCompponents',\n    textKey: 'Connected_components',\n    icon: assets.iconGirth,\n    modeObj: new ModeComponents(cy, parameters),\n  },\n  {\n    modeName: 'modeCircuitRank',\n    textKey: 'Circuit_rank',\n    icon: assets.iconGirth,\n    modeObj: new ModeCircuitRank(cy, parameters),\n  },\n  {\n    modeName: 'modeDiameter',\n    textKey: 'Diameter',\n    icon: assets.iconGirth,\n    modeObj: new ModeDiameter(cy, parameters),\n  },\n  {\n    modeName: 'modeDetAdjacency',\n    textKey: 'Adjacency_det',\n    icon: assets.iconGirth,\n    modeObj: new ModeDetAdjacency(cy, parameters),\n  },\n  // {\n  //   modeName: 'modeAdjacencyMatrix',\n  //   textKey: 'Adjacency_matrix',\n  //   icon: assets.iconGirth,\n  //   modeObj: new ModeAdjacencyMatrix(cy, parameters),\n  // },\n];\n\nexport { cy, parameters, toolbarModes, infoboxModes };\n","/* eslint-disable class-methods-use-this */\nimport * as d3 from 'd3-selection';\nimport { Core } from 'cytoscape';\nimport { Mode, Parameters } from './modes';\nimport graphGalleryList from '../../graph-gallery/graphs-list.json';\nimport * as agr from '../../graph-gallery/graphs-assets';\n\nexport default class ModeLoad implements Mode {\n  cy;\n\n  parameters;\n\n  loadFile = (grId: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    fetch(agr[grId as keyof typeof agr])\n      .then((response) => response.json())\n      .then((data) => {\n        this.cy.json(data as object);\n\n        this.cy.fit(undefined, 30); // zoom and pan to fill the viewport\n        this.cy.nodes().positions((n) => n.renderedPosition()); // fix the rendered positions as model positions\n        this.cy.fit(undefined, 30); // pan to center again (zoom should be ~1)\n\n        this.parameters.nodeIndex = this.cy.nodes().map((e) => e.id());\n        this.cy.emit('cm-graph-updated');\n      });\n  };\n\n  makeGallery = (data: typeof graphGalleryList) => {\n    const galleryContainer = d3\n      .select('#graphList')\n      .selectAll('div')\n      .data(data);\n\n    // enter selection\n    const newItems = galleryContainer\n      .enter()\n      .append('div')\n      .classed('graphGalleryItem', true)\n      .attr('data-bs-dismiss', 'modal')\n      .on('click', (ev, d) => {\n        this.loadFile(d.file);\n      });\n\n    newItems\n      .append('div')\n      .append('img')\n      .attr('src', (d) => agr[`${d.file}_Icon` as keyof typeof agr])\n      .attr('height', '80px');\n\n    newItems.append('div').html((d) => d.name);\n\n    // exit selection\n    galleryContainer.exit().remove();\n\n    // update selection: none\n  };\n\n  constructor(cy: Core, parameters: Parameters) {\n    this.cy = cy;\n    this.parameters = parameters;\n\n    // //  button is not yet created when the mode is instantiated.\n    // d3.select('#btn-modeLoad')\n    //   .attr('data-bs-toggle', 'modal')\n    //   .attr('data-bs-target', '#exampleModal');\n\n    // make filters\n    d3.select('#graphFilters').text('Filters');\n\n    this.makeGallery(graphGalleryList);\n  }\n\n  activate = () => {};\n\n  render() {}\n\n  infobox() {\n    return '';\n  }\n\n  deactivate = () => {};\n}\n","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7xBTE\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$ea6a6522eec90884$export$6503ec6e8aabbaf","$ea6a6522eec90884$export$f7ad0328861e2f03","$ea6a6522eec90884$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$54AWr","$5KKEU","$iVMYU","$bcdbb664d93f028d$export$283c7b7b2d0a1841","idNodeCount","idEdgeCount","outputContainer","document","getElementById","nodeIndex","$bcdbb664d93f028d$export$aea64bc1b6f8f415","$parcel$interopDefault","$lVRnG","$o8PHX","cyOptions","container","$bcdbb664d93f028d$export$f5178b693946e751","modeName","textKey","icon","$d6xW4","iconClear","modeObj","$fL0K9","default","iconExport","$lwSBY","iconImport","$big6F","iconLoad","render","infobox","constructor","cy","parameters","this","grId","fetch","$gPtcg","then","response","json","data","fit","undefined","nodes","positions","n","renderedPosition","map","e","emit","galleryContainer","$8k2jw","select","selectAll","newItems","enter","append","classed","attr","on","ev","d","loadFile","file","html","name","exit","remove","text","makeGallery","$jE6or","iconPointer","$iw6Aq","iconNode","$3cw25","iconEdge","$4nuKq","$bcdbb664d93f028d$export$546aa31356d3f063","iconGirth","$2JjVN","$9vYTT","$cyd7k","$bRZgy","$d6NgQ","$3KKZx","$3vMvi","$dY183","$6Wn7g","use","$1sw6k","init","i18nextOptions","$7616b001dc276569$var$localize","$2iS8N","window","d3","$5bb0935c03f60653$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$963d25a2a326a898$var$url","resolve","import","meta","url","$963d25a2a326a898$exports","toString","findIso","Worker","worker","A","elements","utils","adjacencyMatrix","postMessage","onmessage","console","log","modeNull","primaryMode","secondaryMode","switchSecondaryMode","newMode","deactivate","activate","langList","changeLanguage","isoCode","catch","reason","error","endonym","buttons","updateInfo","infoboxItems","iconInfo","stopPropagation","target","currentTarget","Element","merge","t"],"version":3,"file":"index.89395c55.js.map"}